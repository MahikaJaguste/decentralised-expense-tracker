{"version":3,"sources":["useLocalStorage.js","ethereum/account.js","ethereum/web3.js","routes/login.jsx","ethereum/tracker.js","ethereum/factory.js","routes/add.jsx","routes/view.jsx","App.js","index.js"],"names":["account","useLocalStorage","key","defaultValue","useState","saved","localStorage","getItem","JSON","parse","getStorageValue","value","setValue","useEffect","setItem","stringify","web3","Web3","getAccount","a","window","ethereum","enable","console","log","message","eth","getAccounts","accounts","Login","setAccount","useContext","AppContext","navigate","useNavigate","onLoginHandler","ret_account","replace","className","type","onClick","id","getTracker","factory","methods","getExpenseTracker","call","from","contractAddress","createExpenseTracker","send","Contract","ExpenseTracker","abi","expenseTracker","getFactory","ExpenseTrackerFactory","instance","Add","tracker","description","setDescription","amount","setAmount","setIsLoading","setErrorMessage","getInstances","onSubmit","event","preventDefault","addTransaction","parseInt","htmlFor","name","onChange","target","View","entries","_income","_expense","transactions","setTransactions","income","setIncome","expense","setExpense","balance","setBalance","getTransactions","getIncome","getExpense","reverse","map","transaction","index","style","padding","React","createContext","App","props","viewComp","context_value","Provider","ReactDOM","render","StrictMode","basename","process","path","element","document","getElementById"],"mappings":"y/6NASO,ICPHA,EDOSC,EAAkB,SAACC,EAAKC,GACnC,MAA0BC,oBAAS,WACjC,OATJ,SAAyBF,EAAKC,GAE5B,IAAME,EAAQC,aAAaC,QAAQL,GAEnC,OADgBM,KAAKC,MAAMJ,IACTF,EAKTO,CAAgBR,EAAKC,MAD9B,mBAAOQ,EAAP,KAAcC,EAAd,KASA,OALAC,qBAAU,WAERP,aAAaQ,QAAQZ,EAAKM,KAAKO,UAAUJ,MACxC,CAACT,EAAKS,IAEF,CAACA,EAAOC,I,kCEKFI,EAFR,I,OAAIC,GADD,yBDEKC,EAnBC,uCAAG,4BAAAC,EAAA,0DAEXC,OAAOC,SAFI,yCAKDD,OAAOC,SAASC,SALf,sDASPC,QAAQC,IAAI,KAAMC,SATX,wBAaQT,EAAKU,IAAIC,cAbjB,eAaTC,EAbS,OAcf5B,EAAU4B,EAAS,GAdJ,kBAgBR5B,GAhBQ,yDAAH,qD,gBE2BD6B,EAvBD,WAGV,IACOC,EADQC,qBAAWC,GACnBF,WACHG,EAAWC,cAETC,EAAc,uCAAG,4BAAAhB,EAAA,sEAEOD,IAFP,OAEbkB,EAFa,OAGnBN,EAAWM,GAEXH,EAAS,SAAU,CAAEI,SAAS,IALX,2CAAH,qDAQpB,OAAO,mCACH,sBAAKC,UAAU,uBAAf,UACI,oBAAIA,UAAU,uBAAd,gEACA,wBAAQC,KAAK,SAASC,QAASL,EAAgBM,GAAG,cAAcH,UAAU,uBAA1E,2B,SCWGI,EAlCC,uCAAG,mCAAAvB,EAAA,6DAAQnB,EAAR,EAAQA,QAAS2C,EAAjB,EAAiBA,QAAjB,kBAKaA,EAAQC,QAAQC,oBAAoBC,KAAK,CAC7DC,KAAK/C,IANE,UASY,gDAJvBgD,EALW,yCAWDL,EAAQC,QAAQK,uBAAuBC,KAAK,CAC9CH,KAAM/C,IAZH,wBAeiB2C,EAAQC,QAAQC,oBAAoBC,KAAK,CAC7DC,KAAK/C,IAhBF,QAePgD,EAfO,iEAqBbzB,QAAQC,IAAI,yDAA0D,KAAIC,SArB7D,eAwBfF,QAAQC,IAAI,sBAAuBwB,GAxBpB,UA0Bc,IAAIhC,EAAKU,IAAIyB,SACxCC,EAAeC,IACfL,GA5Ba,eA0BTM,EA1BS,yBA+BPA,GA/BO,0DAAH,sD,SC0BDC,EA1BC,uCAAG,4BAAApC,EAAA,4DAMC,6CAND,kBAUM,IAAIH,EAAKU,IAAIyB,SAC1BK,EAAsBH,IALd,8CAND,OAUXI,EAVW,uDAgBXlC,QAAQC,IAAI,KAAEC,SAhBH,eAmBfF,QAAQC,IAAI,mBAAoBiC,GAChClC,QAAQC,IAAI,cAAcgC,EAAsBH,KApBjC,kBAsBRI,GAtBQ,yDAAH,qDCqGDC,G,OA/FH,WAER,IASIf,EACAgB,EATG3D,EADQ+B,qBAAWC,GACnBhC,QACHiC,EAAWC,cAEf,EAAsC9B,mBAAS,IAA/C,mBAAOwD,EAAP,KAAoBC,EAApB,KACA,EAA4BzD,mBAAS,IAArC,mBAAO0D,EAAP,KAAeC,EAAf,KACA,EAAkC3D,oBAAS,GAA3C,mBAAkB4D,GAAlB,WACA,EAAwC5D,mBAAS,IAAjD,mBAAqB6D,GAArB,WAKMC,EAAY,uCAAG,sBAAA/C,EAAA,sEACDoC,IADC,cACjBZ,EADiB,gBAEDD,EAAW,CACvB1C,UACA2C,YAJa,OAEjBgB,EAFiB,kDAAH,qDASZQ,EAAQ,uCAAG,WAAOC,GAAP,SAAAjD,EAAA,6DACbiD,EAAMC,iBADO,SAGPH,IAHO,cAIbF,GAAa,GACbC,EAAgB,IAChB1C,QAAQC,IAAI,OAAQR,GACpBO,QAAQC,IAAI,mBAAoBmB,GAChCpB,QAAQC,IAAI,UAAWxB,GACvBuB,QAAQC,IAAI,mBAAoBmC,GATnB,mBAYHA,EAAQf,QAAQ0B,eAAeV,EAAaW,SAAST,IAASZ,KAAK,CACrEH,KAAM/C,IAbD,0DAiBTuB,QAAQC,IAAI,iCAAkC,KAAIC,SAClDwC,EAAgB,KAAIxC,SAlBX,QAqBbuC,GAAa,GACbH,EAAe,IACfE,EAAU,IACVE,EAAgB,IAEhBhC,EAAS,SAAU,CAAEI,SAAS,IA1BjB,0DAAH,sDAiCd,OAAO,qCACC,uBACA,wBAAQE,KAAK,SAASC,QANF,WACxBP,EAAS,UAAW,CAAEI,SAAS,KAKyBI,GAAG,aAAaH,UAAU,SAA9E,+BACA,sBAAKA,UAAU,qBAAf,UACQ,mDAEA,uBAAMA,UAAU,sBAAhB,UAEI,gCACI,uBAAOA,UAAU,aAAakC,QAAQ,cAAtC,yBACA,uBACIlC,UAAU,YACVG,GAAG,cACHgC,KAAK,cACLlC,KAAK,OACL5B,MAASiD,EACTc,SAAU,SAACN,GAAD,OAAWP,EAAeO,EAAMO,OAAOhE,aAIzD,gCACI,uBAAO2B,UAAU,aAAakC,QAAQ,SAAtC,oBACA,uBACIlC,UAAU,YACVG,GAAG,SACHgC,KAAK,SACLlC,KAAK,SACL5B,MAASmD,EACTY,SAAU,SAACN,GAAD,OAAWL,EAAUK,EAAMO,OAAOhE,aAIpD,wBAAQ2B,UAAU,iBAAiBG,GAAG,eAAeD,QAAS2B,EAA9D,4B,SCUTS,G,OAlGF,WAET,IAWIjC,EACAgB,EACAkB,EACAC,EACAC,EAdG/E,EADQ+B,qBAAWC,GACnBhC,QACHiC,EAAWC,cAGf,EAAkC9B,oBAAS,GAA3C,mBACA,GADA,UACwCA,mBAAS,KAAjD,mBAAO4E,EAAP,KAAqBC,EAArB,KACA,EAA4B7E,mBAAS,IAArC,mBAAO8E,EAAP,KAAeC,EAAf,KACA,EAA8B/E,mBAAS,IAAvC,mBAAOgF,EAAP,KAAgBC,EAAhB,KACA,EAA8BjF,mBAAS,IAAvC,mBAAOkF,EAAP,KAAgBC,EAAhB,KAiBA1E,qBAAU,YACe,uCAAG,sBAAAM,EAAA,sEACJoC,IADI,cACpBZ,EADoB,gBAEJD,EAAW,CACvB1C,UACA2C,YAJgB,cAEpBgB,EAFoB,yBAQAA,EAAQf,QAAQ4C,kBAAkB1C,KAAK,CACnDC,KAAM/C,IATM,cAQhB6E,EARgB,iBAWAlB,EAAQf,QAAQ6C,YAAY3C,KAAK,CAC7CC,KAAM/C,IAZM,eAWhB8E,EAXgB,iBAcCnB,EAAQf,QAAQ8C,aAAa5C,KAAK,CAC/CC,KAAM/C,IAfM,QAchB+E,EAdgB,yDAmBhBxD,QAAQC,IAAI,mCAAoC,KAAIC,SAnBpC,QAqBpBwD,EAAgBJ,GAChBM,EAAUL,GACVO,EAAWN,GACXQ,EAAWT,EAAUC,GAxBD,0DAAH,qDA4BrBS,GACAjE,QAAQC,IAAIqD,KAGb,IAOH,OAAO,qCACH,uBACA,wBAAQtC,KAAK,SAASC,QANC,WACvBP,EAAS,SAAU,CAAEI,SAAS,KAKqBI,GAAG,YAAtD,8BAECyC,GAAUE,GAAWE,GAClB,sBAAKhD,UAAU,sBAAf,UACI,qBAAIA,UAAU,oBAAd,qBAA2C4C,KAC3C,qBAAI5C,UAAU,oBAAd,sBAA4C8C,KAC5C,qBAAI9C,UAAU,oBAAd,sBAA4CgD,QAGlDN,EAIE,qBAAK1C,UAAU,sBAAf,SACC,YAAI0C,GAAcW,UAAUC,KAAI,SAACC,EAAaC,GACvC,OAAO,sBAAKxD,UAAU,iBAAf,UACH,6BAAKuD,EAAYjC,cACjB,6BAAKiC,EAAYlF,UAFuBmF,QALpD,sBAAMC,MAAO,CAAEC,QAAS,QAAxB,SACT,6DAaMzE,QAAQC,IAAIwD,QC5FRhD,G,OAAaiE,IAAMC,iBA4DjBC,EA1DH,SAACC,GAEZ,IAAOC,EAAYD,EAAZC,SAEP,EAA8BpG,EAAgB,UAAW,IAAzD,mBAAOD,EAAP,KAAgB8B,EAAhB,KAEMwE,EAAgB,CACrBtG,UACA8B,cAGGG,EAAWC,cASf,OACC,mCAcE,eAACF,EAAWuE,SAAZ,CAAqB5F,MAAO2F,EAA5B,UACEtG,EACA,wBACCuC,KAAK,SACLC,QA1BwB,WAC7BV,EAAW,IACXG,EAAS,IAAK,CAAEI,SAAS,KAyBpBI,GAAG,eACHH,UAAU,eAJX,oBAOA,6BAECtC,EAEAqG,EAEA,cAAC,EAAD,IADA,cAAC,EAAD,IAFD,cAAC,EAAD,UCnDNG,IAASC,OACR,cAAC,IAAMC,WAAP,UAIA,cAAC,IAAD,CAAeC,SAAUC,iCAAzB,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,MAAMC,QAAS,cAAC,EAAD,MAC3B,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,EAAD,CAAKT,UAAU,MAC3C,cAAC,IAAD,CAAOQ,KAAK,IAAIC,QACd,sBAAMf,MAAO,CAAEC,QAAS,QAAxB,SACA,iEAOJe,SAASC,eAAe,W","file":"static/js/main.40985450.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction getStorageValue(key, defaultValue) {\r\n  // getting stored value\r\n  const saved = localStorage.getItem(key);\r\n  const initial = JSON.parse(saved);\r\n  return initial || defaultValue;\r\n}\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getStorageValue(key, defaultValue);\r\n  });\r\n\r\n  useEffect(() => {\r\n    // storing input name\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};","import web3 from './web3';\r\n\r\nlet account;\r\n\r\nconst getAccount = async () => {\r\n\r\n    if (window.ethereum) {\r\n        try {\r\n            // Request account access if needed\r\n            await window.ethereum.enable();\r\n            // Acccounts now exposed\r\n        } \r\n        catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n    account = accounts[0];\r\n\r\n    return account;\r\n}\r\n\r\nexport default getAccount;","import Web3 from \"web3\";\r\n\r\nlet web3;\r\n\r\n// // Modern dapp browsers...\r\n// if (window.ethereum) {\r\n//     web3 = new Web3(window.ethereum);\r\n// }\r\n// // Legacy dapp browsers...\r\n// else if (window.web3) {\r\n//     // Use Mist/MetaMask's provider.\r\n//     web3 = window.web3;\r\n//     console.log(\"Injected web3 detected.\");\r\n// }\r\n// // Fallback to localhost; use dev console port by default...\r\n// else {\r\n//     const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\r\n//     web3 = new Web3(provider);\r\n//     console.log(\"No web3 instance injected, using Local web3.\");\r\n// }\r\n   \r\nvar url = 'HTTP://127.0.0.1:7545' // 8545 if using ganache-cli\r\nweb3 = new Web3(url);   \r\n  \r\nexport default web3;\r\n","import React, { useContext } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport getAccount from '../ethereum/account';\r\nimport { AppContext } from '../App';\r\n\r\nimport '../styles/login.css';\r\n\r\nconst Login = () => {\r\n    //const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n    let app_data = useContext(AppContext);\r\n    const {setAccount} = app_data;\r\n    let navigate = useNavigate();\r\n\r\n    const onLoginHandler = async () => {\r\n        //setIsConnecting(true);\r\n        const ret_account = await getAccount();\r\n        setAccount(ret_account);\r\n        //setIsConnecting(false);\r\n        navigate(\"../add\", { replace: true });\r\n    }\r\n\r\n    return <>\r\n        <div className='flex-container-login'>\r\n            <h4 className='flexbox-item-login-1'>Connect to Expense Tracker with a MetaMask account</h4>\r\n            <button type='submit' onClick={onLoginHandler} id='loginButton' className='flexbox-item-login-2'>Connect</button>\r\n        </div>  \r\n    </>\r\n}\r\n\r\nexport default Login;","import web3 from './web3';\r\nimport ExpenseTracker from '../artifacts/ExpenseTracker.json';\r\n\r\nconst getTracker = async ({account, factory}) => {\r\n\r\n    let contractAddress;\r\n\r\n    try{\r\n        contractAddress = await factory.methods.getExpenseTracker().call({\r\n            from:account\r\n        });\r\n\r\n        if(contractAddress === '0x0000000000000000000000000000000000000000'){\r\n\r\n            await factory.methods.createExpenseTracker().send({\r\n                from: account,\r\n            });\r\n\r\n            contractAddress = await factory.methods.getExpenseTracker().call({\r\n                from:account\r\n            });\r\n        }  \r\n    }\r\n    catch(err){\r\n      console.log(\"Error in getting ExpenseTracker contrct instance, err=\", err.message);\r\n    }\r\n\r\n    console.log(\"Contract adddress: \", contractAddress);\r\n\r\n    const expenseTracker = await new web3.eth.Contract(\r\n      ExpenseTracker.abi,\r\n      contractAddress\r\n    );\r\n\r\n    return  expenseTracker;\r\n};\r\n\r\nexport default getTracker;","import web3 from './web3';\r\nimport ExpenseTrackerFactory from '../artifacts/ExpenseTrackerFactory.json';\r\n\r\nconst getFactory = async () => {\r\n\r\n    // rinkeby\r\n    // const address = \"0xAec05e62F6DD9218924911332053c1045D941fbD\";\r\n\r\n    // ganache\r\n    const address = \"0xA497AFea517dEeaa2a205af5B86989F4830aA87E\";\r\n    let instance;\r\n\r\n    try {\r\n        instance = await new web3.eth.Contract(\r\n            ExpenseTrackerFactory.abi,\r\n            address\r\n        );\r\n    }\r\n    catch(e){\r\n        console.log(e.message);\r\n    }\r\n\r\n    console.log('factory instance', instance);\r\n    console.log('factory abi',ExpenseTrackerFactory.abi );\r\n\r\n    return instance;\r\n\r\n}   \r\n\r\nexport default getFactory;","import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport web3 from '../ethereum/web3';\r\nimport getTracker from '../ethereum/tracker';\r\nimport getFactory from '../ethereum/factory';\r\nimport { AppContext } from '../App';\r\n\r\nimport '../styles/add.css';\r\n\r\nconst Add = () => {\r\n\r\n    let app_data = useContext(AppContext);\r\n    const {account} = app_data;\r\n    let navigate = useNavigate();\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    let factory;\r\n    let tracker;\r\n\r\n    const getInstances = async () => {\r\n        factory = await getFactory();\r\n        tracker = await getTracker({\r\n            account,\r\n            factory,   \r\n        });\r\n    };\r\n\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await getInstances();\r\n        setIsLoading(true);\r\n        setErrorMessage('');\r\n        console.log('web3', web3);\r\n        console.log('factory instance', factory);\r\n        console.log('account', account);\r\n        console.log('tracker instance', tracker);\r\n\r\n        try{\r\n            await tracker.methods.addTransaction(description, parseInt(amount)).send({\r\n                from: account\r\n            });\r\n        }\r\n        catch(err){\r\n            console.log(\"Error in adding transaction : \", err.message);\r\n            setErrorMessage(err.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        setDescription('');\r\n        setAmount('');\r\n        setErrorMessage('');\r\n\r\n        navigate(\"../add\", { replace: true });\r\n    };\r\n\r\n    const onViewButtonHandler = () => {\r\n        navigate(\"../view\", { replace: true });\r\n    };\r\n\r\n    return <>\r\n            <br/>\r\n            <button type='submit' onClick={onViewButtonHandler} id='viewButton' className='button'>View Transactions</button> \r\n            <div className='flex-container-add'>\r\n                    <h3>Add a transaction</h3>\r\n                        \r\n                    <form className='flex-container-form'>\r\n\r\n                        <div>\r\n                            <label className='form-label' htmlFor='description'>Description</label>\r\n                            <input \r\n                                className='input-box'\r\n                                id='description' \r\n                                name='Description' \r\n                                type='text'\r\n                                value = {description}\r\n                                onChange={(event) => setDescription(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <label className='form-label' htmlFor='amount'>Amount</label>\r\n                            <input\r\n                                className='input-box'\r\n                                id='amount' \r\n                                name='Amount' \r\n                                type='number'\r\n                                value = {amount}\r\n                                onChange={(event) => setAmount(event.target.value)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <button className='flex-item-form' id='submitButton' onClick={onSubmit}>Add</button>\r\n                    </form> \r\n                \r\n            </div>     \r\n    </>\r\n}\r\n\r\nexport default Add;","import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport getTracker from '../ethereum/tracker';\r\nimport getFactory from '../ethereum/factory';\r\nimport { AppContext } from '../App';\r\nimport { useEffect } from 'react';\r\n\r\nimport '../styles/view.css';\r\n\r\nconst View = () => {\r\n\r\n    let app_data = useContext(AppContext);\r\n    const {account} = app_data;\r\n    let navigate = useNavigate();\r\n\r\n    \r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [transactions, setTransactions] = useState('');\r\n    const [income, setIncome] = useState('');\r\n    const [expense, setExpense] = useState('');\r\n    const [balance, setBalance] = useState('');\r\n\r\n    let factory;\r\n    let tracker;\r\n    let entries;\r\n    let _income;\r\n    let _expense;\r\n    let _balance;\r\n\r\n    // const getInstances = async () => {\r\n    //     factory = await getFactory();\r\n    //     tracker = await getTracker({\r\n    //         account,\r\n    //         factory,   \r\n    //     });\r\n    // };\r\n\r\n    useEffect(() => {\r\n        const getTransactions = async () => {\r\n            factory = await getFactory();\r\n            tracker = await getTracker({\r\n                account,\r\n                factory,   \r\n            });\r\n\r\n            try{\r\n                entries = await tracker.methods.getTransactions().call({\r\n                    from: account\r\n                });\r\n                _income = await tracker.methods.getIncome().call({\r\n                    from: account\r\n                });\r\n                _expense = await tracker.methods.getExpense().call({\r\n                    from: account\r\n                });\r\n            }\r\n            catch(err){\r\n                console.log(\"Error in getting transactions : \", err.message);\r\n            }\r\n            setTransactions(entries);\r\n            setIncome(_income);\r\n            setExpense(_expense);\r\n            setBalance(_income - _expense);\r\n        };\r\n        \r\n        // setIsLoading(true);\r\n        getTransactions();\r\n        console.log(entries);\r\n        // setIsLoading(false);\r\n\r\n    }, []);\r\n\r\n\r\n    const onAddButtonHandler = () => {\r\n        navigate(\"../add\", { replace: true });\r\n    };\r\n\r\n    return <> \r\n        <br/>\r\n        <button type='submit' onClick={onAddButtonHandler} id='addButton'>Add Transactions</button>\r\n\r\n        {income && expense && balance && \r\n            <div className='flex-container-view'>\r\n                <h3 className='flexbox-item-view'>Income: {income}</h3>\r\n                <h3 className='flexbox-item-view'>Expense: {expense}</h3>\r\n                <h3 className='flexbox-item-view'>Balance: {balance}</h3>\r\n            </div>\r\n        }\r\n        {!transactions ? \r\n            <main style={{ padding: \"1rem\" }}>\r\n\t\t\t<h1>Getting transactions ... </h1>\r\n\t\t\t</main> :                \r\n            <div className='grid-container-view'>\r\n            {[...transactions].reverse().map((transaction, index) => {\r\n                    return <div className='grid-item-view' key={index}>\r\n                        <h4>{transaction.description}</h4>\r\n                        <h3>{transaction.value}</h3>\r\n                    </div>\r\n                }\r\n            )\r\n            }\r\n            </div>\r\n        }\r\n        {console.log(transactions)}\r\n    </>\r\n}\r\n\r\nexport default View;","import React, {useState } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nimport { useNavigate } from \"react-router-dom\";\n\n// components\nimport Login from './routes/login';\nimport Add from './routes/add';\nimport View from './routes/view';\n\nimport './styles/logout.css';\n\nexport const AppContext = React.createContext();\n\nconst App = (props) => {\n\n\tconst {viewComp} = props;\n\n\tconst [account, setAccount] = useLocalStorage('account', '');\n\n\tconst context_value = {\n\t\taccount,\n\t\tsetAccount,\n\t}\n\n\tlet navigate = useNavigate();\n\n\tconst onLogoutButtonHandler = () => {\n\t\tsetAccount('');\n\t\tnavigate(\"/\", { replace: true });\n\t}\n\n\t// console.log(context_value);\n\n\treturn (\n\t\t<>\t\t\n\n\t\t\t{/* {account ? \n\t\t\t\t<button\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tstyle={{marginRight:'200px'}}\n\t\t\t\t\tonClick={onLogoutButtonHandler} \n\t\t\t\t\tid='logoutButton' \n\t\t\t\t\tclassName='logoutButton'>\n\t\t\t\t\t\tLogout\n\t\t\t\t</button> :\n\t\t\t\t<></>\n\t\t\t} */}\n\n\t\t\t\t<AppContext.Provider value={context_value}>\n\t\t\t\t\t{account ? \n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tonClick={onLogoutButtonHandler} \n\t\t\t\t\t\t\tid='logoutButton' \n\t\t\t\t\t\t\tclassName='logoutButton'>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</button> :\n\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t\t{!account ?\n\t\t\t\t\t\t<Login /> :\n\t\t\t\t\t\t!viewComp ?\n\t\t\t\t\t\t\t<Add/> : \n\t\t\t\t\t\t\t<View/>\n\t\t\t\t\t}\n\t\t\t\t</AppContext.Provider>\t\t\n\t\t</>\n\t);\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport App from './App';\n\n// import { Provider } from 'react-redux';\n// import store from './redux/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t{/* <Provider store={store}>\n\t\t\t<App />\n\t\t</Provider> */}\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<Routes>\n\t\t\t<Route path=\"/\" element={<App/>}/>\n\t\t\t<Route path=\"add\" element={<App/>} />\n\t\t\t<Route path=\"view\" element={<App viewComp={true}/>} />\n\t\t\t<Route path=\"*\" element={\n\t\t\t\t\t<main style={{ padding: \"1rem\" }}>\n\t\t\t\t\t<h1>Page does not exist!</h1>\n\t\t\t\t\t</main>\n\t\t\t\t}\n\t\t\t/>\n\t\t</Routes>\n\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}